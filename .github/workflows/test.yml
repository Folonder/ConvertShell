name: ASP.NET Build, Test, Deploy

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '7.0'

      - name: Restore dependencies
        run: dotnet restore

      - name: Build
        run: dotnet build

      - name: Test
        run: dotnet test
        
      - name: Checkout
        uses: actions/checkout@v2
        
      - name: Yandex Cloud login
        uses: yc-actions/yc-cr-login@v1
        with:
          yc-sa-json-credentials: ${{ secrets.YC_SA_JSON_CREDENTIALS }}
          
      - name: Build, tag, and push image to Yandex Cloud Container Registry
        env:
          CR_REGISTRY: ${{secrets.YANDEX_REGISTRY_ID}}
          CR_REPO: ${{secrets.YANDEX_REPO_NAME}}
          IMAGE_TAG: latest
          VM_ID: ${{secrets.VM_ID}}
        run: |
          docker build -t cr.yandex/$CR_REGISTRY/$CR_REPO:$IMAGE_TAG .
          docker push cr.yandex/$CR_REGISTRY/$CR_REPO:$IMAGE_TAG
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to server via ssh
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.KEY }}
          passphrase: ${{ secrets.PASSPHRASE}}
          port: ${{ secrets.PORT }}
          script: |
            sudo docker pull cr.yandex/${{secrets.YANDEX_REGISTRY_ID}}/${{secrets.YANDEX_REPO_NAME}}:latest
            sudo docker run cr.yandex/${{secrets.YANDEX_REGISTRY_ID}}/${{secrets.YANDEX_REPO_NAME}}:$latest
